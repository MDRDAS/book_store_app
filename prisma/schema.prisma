generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

model Book {
    id          String @id @default(cuid())
    userId      String
    title       String
    description String
    cover       String
    price       Float  @default(0.00)
    inventory   Int

    categories Rating[]
    ratings    Category[]

    createdAt DateTime @default(now())
    updatedAt DateTime @default(now())
}

model Category {
    id        String   @id @default(cuid())
    name      String
    Books     Book[]
    createdAt DateTime @default(now())
    updatedAt DateTime @default(now())
}

model Rating {
    id     String @id @default(cuid())
    userId String
    rating Int

    bookId String
    book   Book   @relation(fields: [bookId], references: [id])

    createdAt DateTime @default(now())
    updatedAt DateTime @default(now())
}

model Cart {
    id     String @id @default(cuid())
    userId String

    items CartItem[]

    createdAt DateTime @default(now())
    updatedAt DateTime @default(now())
}

model CartItem {
    id       String @id @default(cuid())
    bookId   String
    quantity Int

    cartId String
    cart   Cart   @relation(fields: [cartId], references: [id])

    createdAt DateTime @default(now())
    updatedAt DateTime @default(now())
}

model EmailPreferences {
    id            String   @id @default(cuid())
    userId        String
    email         String
    token         String
    newsletter    Boolean  @default(false)
    marketing     Boolean  @default(false)
    transactional Boolean  @default(false)
    createdAt     DateTime @default(now())
}

model Payments {
    id                     String   @id @default(cuid())
    userId                 String
    stripeAccountId        String
    stripeAccountCreatedAt Int
    stripeAccountExpiresAt Int
    detailsSubmitted       Boolean  @default(false)
    createdAt              DateTime @default(now())
}

enum OrderStatus {
    PENDING
    PAID
    SHIPPED
    DELIVERED
    CANCELLED
}

model Orders {
    id                        String      @id @default(cuid())
    userId                    String
    cartId                    String
    // items 
    updatedAt                 DateTime    @default(now())
    total                     Int
    status                    OrderStatus @default(PENDING)
    stripePaymentIntentId     String
    stripePaymentIntentStatus String
    name                      String
    email                     String
    addressId                 String
    createdAt                 DateTime    @default(now())
}

model addresses {
    id         String   @id @default(cuid())
    userId     String
    line1      String
    line2      String
    city       String
    state      String
    postalCode String
    country    String
    createdAt  DateTime @default(now())
}
